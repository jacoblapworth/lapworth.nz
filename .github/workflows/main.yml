name: CI
on:
  pull_request:
  workflow_dispatch:
env:
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node
        uses: actions/setup-node@v6.0.0
        with:
          node-version-file: package.json
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Pull Vercel Environment Variables
        run: |
          pnpm dlx vercel@latest env pull .env.local --token=${{ secrets.VERCEL_TOKEN }} --yes
        working-directory: apps/web
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Next build cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Build
        run: pnpm run build

      - name: Project cache
        uses: actions/cache@v4
        with:
          path: |
            /home/runner/.cache/Cypress/*
            ${{ github.workspace }}/*
          key: ${{ github.sha }}

  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node
        uses: actions/setup-node@v6.0.0
        with:
          node-version-file: package.json
          cache: 'pnpm'

      - name: Setup Biome
        uses: biomejs/setup-biome@v2

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint:ci

  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node
        uses: actions/setup-node@v6.0.0
        with:
          node-version-file: package.json
          cache: 'pnpm'

      - name: Set up Cypress binary cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      - name: Pull Vercel Environment Variables
        run: |
          pnpm dlx vercel@latest env pull .env.local --token=${{ secrets.VERCEL_TOKEN }} --yes
        working-directory: apps/web
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Build
        run: pnpm run build

      - name: Cypress
        uses: cypress-io/github-action@v6
        with:
          start: pnpm run start
          wait-on: 'http://localhost:3000'
          record: true
          install: false
          group: web
          working-directory: apps/web
          browser: chrome
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Success:
    runs-on: ubuntu-latest
    needs: [Build, Lint, Test]
    if: always()
    steps:
      - run: exit 1
        if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')) }}
      - name: Assign dependabot failures
        run: gh pr edit ${{ github.event.pull_request.number }} --add-assignee "jacoblapworth"
        if: ${{ failure() && github.actor == 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
